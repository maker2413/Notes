#+TITLE: Cut
#+PROPERTY: header-args :exports both

~cut~ is a linux command line tool that allows us to remove a section from each
line provided, whether that is a file or the output of another command. Lets see
a simple run of the ~cut~ command:
#+NAME: HelloWorld
#+begin_src sh :results output :exports both
  echo "Hello there world! What a wonderful day!" | cut -c 1-15
#+end_src

#+RESULTS: HelloWorld
: Hello there wor

We piped our echo statement into ~cut~ and gave it the =-c= flag to indicate we
wanted to grab a certain section of characters including spaces from each line
provided. In this case we only have one line of text so we grabbed characters
1-15 from it. We can also just ~cut~ characters from a file:
#+NAME: FileCut
#+begin_src sh :results output :exports both
  cut -c 1-8 /etc/shells
#+end_src

#+RESULTS: FileCut
: # Pathna
: # See sh
: 
: /bin/sh
: /bin/bas
: /usr/bin
: /usr/bin
: /bin/fis

Here we grabbed the first 8 characters of each line of our =/etc/shells= file.
We don't have to give ~cut~ an exact range of characters either. Say we wanted
to grab everything after the first 6 characters of our shells file:
#+NAME: Shells
#+begin_src sh :results output :exports both
  cut -c 6- /etc/shells
#+end_src

#+RESULTS: Shells
: hnames of valid login shells.
:  shells(5) for details.
: 
: sh
: bash
: bin/git-shell
: bin/fish
: fish

This would give us a list of our installed shells.

* Delimiters
  ~cut~ can do more than just grab a range of characters for us though. The =-d=
  flag allows us to provide a delimiter to tell ~cut~ what each of the fields we
  want to work with are separted by. Lets see an example of that:
  #+NAME: Delimiter
  #+begin_src sh :results output :exports both
    echo "Hello there world! What a wonderful day!" | cut -d ' ' -f3
  #+end_src

  #+RESULTS: Delimiter
  : world!

  We just told ~cut~ that we want to separate our text into fields based on an
  empty space. We then told cut that we wanted the third field (=-f3=). Lets see
  a real world example of when this would be used:
  #+NAME: Users
  #+begin_src sh :results output :exports both
    cut -d ':' -f1 /etc/passwd
  #+end_src

  #+RESULTS: Users
  #+begin_example
  root
  bin
  daemon
  mail
  ftp
  http
  nobody
  dbus
  systemd-journal-remote
  systemd-network
  systemd-resolve
  systemd-timesync
  systemd-coredump
  uuidd
  avahi
  colord
  dhcpcd
  git
  lightdm
  polkitd
  epost
  brltty
  dnsmasq
  nvidia-persistenced
  rtkit
  usbmux
  systemd-oom
  #+end_example

  We told ~cut~ to look in =/etc/passwd= and use the delimiter =:= to print us
  the first field of each line. This provided us with the users on our system.
