:PROPERTIES:
:ID:       0817633b-da6b-4889-ab18-267d6cb9ef60
:END:
#+title: TypeScript
#+created: [2021-12-05 Sun 23:57]
#+last_modified: [2021-12-06 Mon 02:08:21]
#+filetags: ProgrammingLanguage

TypeScript is a progamming language that is based on [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]]. In fact
TypeScript is written just like [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] with added syntax for types and
compiles into [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] with none of its own syntax left around. The type
system of TypeScript has many key features that it adds, some of these are:
- Helps to catch errors *during development*
- Uses 'type annotations' to analyze code
- TypeScript is only active *during* development. This simply means that all
  TypeScript code when compiled into [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] doesn't stick around and the
  machine running the [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] code ie: a web browser has no idea what
  TypeScript even is.
- TypeScript *doesn't* provide any performance optimization

Since TypeScript compiles to [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] and doesn't leave any of its own syntax
behind going forward we think of TypeScript as [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] with annotations
added. Although it isn't a requirement to know [[id:a29e994c-1920-4ea6-8cfa-946c82e25429][JavaScript]] before learning
TypeScript I would highly recommend you have an understanding of at least the
basics before learning TypeScript.

* What is a type system?
  *Placeholder Text*
  The following text is just some quick notes I have jotted down and need to still
  be reworded to be more descript:
  - A type is an easy way to refer to the different properties and functions that a
  value has.
  - There are two forms of types:
    - primitive types (JS types):
      - number
      - boolean
      - void
      - undefined
      - string
      - symbol
      - null
    - Object types (types that we define):
      - functions
      - arrays
      - classes
      - objects
  - Why do we care about types?
    - types are used by the typescript compiler to analyze our code for errors.
    - types allow other engineers to understand what values are flowing around our
      codebase.
  - Where do we use types?
    - Everywhere!
  *Examples in Features/types.ts*

* Type annotations in action
  *Placeholder Text*
  The following text is just some quick notes I have jotted down and need to still
  be reworded to be more descript:
  - What are type annotations?:
    - Code we add to tell Typescript what type of value a variable will refer to.
    - Type annotations are defined by the developer.
  - What is type inference?:
    - TypeScript tries to figure out what type of value a variable refers to.
    - Type inference is guessed by TypeScript.
  *Examples in Features/annotations/variables.ts*
  - Understanding Inference:
    - when we type ~const color = 'red';~ type inference will determine we want
      a string.
    - This happens because we initialized our variable when we declared it.
      - ~const color~ is a variable declaration.
      - ~'red'~ is our variable initialization.
    - If we declare a variable but don't initialize it on the same line
      typescript will not be able to infer what type our variable is and give it
      a type of ~any~.
